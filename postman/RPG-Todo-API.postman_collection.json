{
  "info": {
    "_postman_id": "rpg-todo-api-collection",
    "name": "RPG Todo API",
    "description": "API collection for RPG Todo application with ledger-based XP system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check if the server is running"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.token) {",
                  "        pm.environment.set('auth_token', jsonData.data.token);",
                  "        pm.environment.set('user_id', jsonData.data.user.id);",
                  "        console.log('Token saved to environment');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"player1\",\n  \"email\": \"player1@example.com\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user. Awards 5 XP registration bonus."
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.token) {",
                  "        pm.environment.set('auth_token', jsonData.data.token);",
                  "        pm.environment.set('user_id', jsonData.data.user.id);",
                  "        console.log('Token saved to environment');",
                  "        ",
                  "        if (jsonData.data.leveledUp) {",
                  "            console.log('ðŸŽ‰ You leveled up!');",
                  "        }",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"player1@example.com\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with email and password. Awards 2 XP for daily login (once per day)."
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout user (client-side should remove token)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Get current user profile (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"new_username\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Update user profile (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Get User Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "stats"]
            },
            "description": "Get user stats (XP, level, achievements) (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Get XP History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/xp-history?limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "xp-history"],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Get user XP transaction history (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Delete Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/users/account",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "account"]
            },
            "description": "Delete user account and all associated data permanently. WARNING: This action cannot be undone!"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Get Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks?status=open&page=1&limit=25",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks"],
              "query": [
                {
                  "key": "status",
                  "value": "open",
                  "description": "open, completed, archived"
                },
                {
                  "key": "priority",
                  "value": "High",
                  "description": "Low, Medium, High, Urgent",
                  "disabled": true
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "25",
                  "description": "10, 25, or 50"
                }
              ]
            },
            "description": "Get user tasks with filtering and pagination (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Complete project documentation\",\n  \"description\": \"Write comprehensive documentation for the RPG Todo project\",\n  \"dueDate\": \"2025-10-30T18:00:00Z\",\n  \"priority\": \"High\",\n  \"category\": \"Documentation\",\n  \"labels\": [\"work\", \"urgent\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tasks",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks"]
            },
            "description": "Create a new task. XP automatically assigned based on priority. (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated task title\",\n  \"priority\": \"Urgent\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/tasks/:taskId",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", ":taskId"],
              "variable": [
                {
                  "key": "taskId",
                  "value": "{{task_id}}"
                }
              ]
            },
            "description": "Update task details (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Complete Task",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/:taskId/complete",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", ":taskId", "complete"],
              "variable": [
                {
                  "key": "taskId",
                  "value": "{{task_id}}"
                }
              ]
            },
            "description": "Mark task as completed. Awards XP via points_ledger. (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Archive Task",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/:taskId/archive",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", ":taskId", "archive"],
              "variable": [
                {
                  "key": "taskId",
                  "value": "{{task_id}}"
                }
              ]
            },
            "description": "Archive task (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/tasks/:taskId",
              "host": ["{{base_url}}"],
              "path": ["api", "tasks", ":taskId"],
              "variable": [
                {
                  "key": "taskId",
                  "value": "{{task_id}}"
                }
              ]
            },
            "description": "Delete task permanently (Coming Soon)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Achievements",
      "item": [
        {
          "name": "Get All Achievements",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/achievements",
              "host": ["{{base_url}}"],
              "path": ["api", "achievements"]
            },
            "description": "Get all available achievements (Coming Soon)"
          },
          "response": []
        },
        {
          "name": "Get User Achievements",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/achievements/user",
              "host": ["{{base_url}}"],
              "path": ["api", "achievements", "user"]
            },
            "description": "Get user's unlocked achievements (Coming Soon)"
          },
          "response": []
        }
      ]
    }
  ]
}

